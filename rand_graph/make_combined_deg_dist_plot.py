# This script makes histograms and plots generated by colombia network programs.

import csv
import matplotlib.pyplot as plt
import math
import random
import numpy as np

random.seed(8008)

def make_hist(count_file,edge_file,sp,yr):
    # loads data and passes dat to plot program

    # allow different graph attributes 
    shapes = ['o','*']
    ga_ind = 0 # graph attribute index 

    # loop through data
    for data_directory in ['total_rand/results/', 
                            'same_deg_dist/results/']:
        count_loc = data_directory + count_file
        edge_loc = data_directory + edge_file
        count, edge = load_dat(count_loc,edge_loc)
        ax          = plot_bar(count,edge,sp,shapes[ga_ind])
        plt.ylabel(str(yr))
        ga_ind = ga_ind + 1 # next graph
    return ax

def load_dat(count_file,edge_file):
    count_reader = csv.reader(open(count_file,'rb'))
    edge_reader  = csv.reader(open(edge_file,'rb'))
    count        = []
    edge         = []
    for row in count_reader:
        count.append(row)
    for row in edge_reader:
        edge.append(row)
    return count, edge

def running_sum(a):
    '''generator for running sum'''
    tot = 0
    for item in a:
        tot += item
        yield tot

def plot_bar(count,edge,sp,shape):
    ax                          = plt.subplot(sp[0],sp[1],sp[2])
    edge                        = [float(x) for x in edge[0]]
    count                       = [float(x) for x in count[0]]
    run_count = list(running_sum(count))
    back_count = [sum(count) - x for x in run_count]
    count = [x / sum(count) for x in back_count]
    count = [1] + count[:-1]
    p = np.polyfit(np.log(edge),np.log(count),2)
    plt.scatter(np.log(edge),np.log(count),marker = shape,s = 24)
    #plt.plot(np.log(edge),np.polyval(p,np.log(edge)),'-',label="Best fit") # A red solid line
    return ax

def send_to_plot(yearlist,buytype,selltype):
    tot = len(yearlist)
    ax_list = []
    plot_num = 1
    for year in yearlist:
        buy_count_str        = str(year) + '/' + buytype + '_count_'  + str(year) + ''
        buy_edge_str         = str(year) + '/' + buytype + '_edge_'   + str(year) + ''
        sell_count_str       = str(year) + '/' + selltype + '_count_' + str(year) + ''
        sell_edge_str        = str(year) + '/' + selltype + '_edge_'  + str(year) + ''
        ax                   = make_hist(buy_count_str,buy_edge_str,[tot,2,plot_num],year)
        plt.xlabel('Colombian importer')
        ax_list.append(ax)
        ax                   = make_hist(sell_count_str,sell_edge_str,[tot,2,plot_num + 1],year)
        plt.xlabel('Foreign supplier')
        ax_list.append(ax)
        plot_num             = plot_num + 2
    return ax_list


yearlist   = [2009]
plt.figure(1,figsize=(12, 8))
ax_list     = send_to_plot(yearlist,'BUY_deg','SELL_deg')
plt.savefig('deg_dist.png')
plt.figure(2,figsize=(12, 8))
ax_list     = send_to_plot(yearlist,'BUY_deg2','SELL_deg2')
plt.savefig('deg2_dist.png')
#plt.figure(3,figsize=(12, 8))
#ax_list     = send_to_plot(yearlist,'LOC_CLUST_NODE_BUY','LOC_CLUST_NODE_SELL')
#plt.savefig('loc_clust_dist.png')

plt.show()
